onNewIntent调用时机
原创 2015年12月31日 14:03:29

singleInstance:
第一次进入：onCreate onStart
在栈顶再次进入： onNewIntent
不在栈顶再次进入：onNewIntent onRestart onStart
按home键再次进入:onRestart onStart
按返回键：onRestart onStart


standard:
第一次进入：onCreate onStart
在栈顶再次进入： onCreate onStart
不在栈顶再次进入：onCreate onStart
按home键再次进入:onRestart onStart
按返回键：onRestart onStart


singleTop:
第一次进入：onCreate onStart
在栈顶再次进入：onNewIntent
不在栈顶再次进入：onCreate onStart
按home键再次进入:onRestart onStart
按返回键：onRestart onStart


singleTask:
第一次进入：onCreate onStart
在栈顶再次进入：onNewIntent
不在栈顶再次进入：onNewIntent onRestart onStart
按home键再次进入:onRestart onStart

按返回键：onRestart onStart


Activity的四种启动模式：  
    1. standard  
        默认启动模式，每次激活Activity时都会创建Activity，并放入任务栈中，永远不会调用onNewIntent()。  
    2. singleTop  
        如果在任务的栈顶正好存在该Activity的实例， 就重用该实例，并调用其onNewIntent()，否者就会创建新的实例并放入栈顶(即使栈中已经存在该Activity实例，只要不在栈顶，都会创建实例，而不会调用onNewIntent()，此时就跟standard模式一样)。  
    3. singleTask  
        如果在栈中已经有该Activity的实例，就重用该实例(会调用实例的onNewIntent())。重用时，会让该实例回到栈顶，因此在它上面的实例将会被移除栈。如果栈中不存在该实例，将会创建新的实例放入栈中（此时不会调用onNewIntent()）。   
    4. singleInstance  
        在一个新栈中创建该Activity实例，并让多个应用共享改栈中的该Activity实例。一旦改模式的Activity的实例存在于某个栈中，任何应用再激活改Activity时都会重用该栈中的实例，其效果相当于多个应用程序共享一个应用，不管谁激活该Activity都会进入同一个应用中。  



1. 方法体中需手动调用setIntent(intent),否则之后的getIntent()获取的都是旧的intent对象;
2. 被onNewIntent方式打开的activity,对生命周期的影响.
 1. 之前activity是resume状态,onNewIntent()后只会调用onResume()方法
  2. 否则按照 `onNewIntent->onRestart->onStart->onResume->.`